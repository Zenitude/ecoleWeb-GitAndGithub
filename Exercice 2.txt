II Exercice Branches et fusion

1. Créez un dossier "Dashboard".

	mkdir Dashboard

2. Initialisez un dépôt git.

	git init

	Initialized empty Git repository in C:/Users/Zenittude/Desktop/Dashboard/.git/

3. Créez un index.html avec un doctype et un h1 de votre choix

4. Créez un commit pour sauvegarder ces changements.

	git add .

	git status

	On branch master

	Untracked files:
        (use "git add <file>... to include in what will be commited)
            index.html
    
    	nothing added to commit but untracked files present (use "git add" to track)

	git commit -m "Initialisation du Dashboard"

5. Créez une branche api

	git branch

	* master

	git branch api

	git branch

	api
	* master

6. Créez un fichier app.js dans cette branche

	git switch api

	Switched to branch 'api'

	Création du fichier app.js

7. Écrivez une fonction :

	function foo(name)
	{
		console.log("Bienvenue", name);
	}

8. Faites un commit de ces changements

	git status

	On branch master

	Untracked files:
        (use "git add <file>... to include in what will be commited)
            app.js
    
    	nothing added to commit but untracked files present (use "git add" to track)

	git add app.js

	git commit-m "ajout app.js"

	[api 71e6695] Ajout app.js
	1 file changed, 4 insertions(+)
	create mode 100644 Dashboard/app.js

9. Fusionner la branche master avec la branche api.

	git switch master

	Switched to branch 'master'

	git merge api

	Updating 71e6695...
	Fast-forward
	Dashboard/app.js | 4 ++++
	1 files chanded, 4 insertions(+)
	create mode 100644 Dashboard/app.js

10. Faites en sorte de créer une fusion utilisant la "stratégie récursive"

	Création d'un fichier style.css

		body
		{
			background: salmon;
		}

	git add style.css

	git commit -m "Ajout de style.css'

	[master dcb218c] Ajout style.css
	1 file changed, 4 insertions(+)
	create mode 100644 Dashboard/style.css

	git switch api

	Création d'un fichier type.ts

		console.log("Bonjour");

	git add type.ts

	git commit -m "Ajout type.ts"

	[api c3cd57f] Ajout type.ts
	1 file changed, 1 insertion(+)
	create mode 100644 Dashboard/type.ts
	
	git switch master

	git merge api

	Merge made by the 'ort' strategy.
	Dashboard/type.ts | 1 +
	1 file changed, 1 insertion(+)
	create mode 100644 Dashboard/type.ts
	
11. Faites en sorte de créer une fusion provoquant un conflit, puis résolvez-le

	modification index.html ligne 11
	<p>mon paragraphe</p>

	git add index.html

	git commit -m "Ajout d'un paragraphe dans index.html"
	
	[master 5a25a13] Ajout d'un paragraphe dans index.html
	1 file changed, 1 insertion(+)

	git switch api

	modification index.html ligne 11 à 13
	<ul>
		<li>Ma liste</li>
	</ul>

	git add index.html

	git commit -m "Ajout d'une liste dans index.html"

	[api 41e11f4] Ajout d'une liste dans index.html
	1 file changed, 3 insertions(+)

	git switch master

	git merge api

	Auto-merging Dashboard/index.html
	CONFLICT (content): Merge conflict in Dashboard/index.html
	Automatic merge failed; fix conflicts and then commit the result.

	Sur Visual Code
	<<<<<<< HEAD
	    <p>mon paragraphe</p>
	=======
	    <ul>
	        <li>Ma liste</li>
	    </ul>
	>>>>>>> api
	Accept both changes

	git add index.html

	git commit -m "Résolution du conflit"

	[master 448f30b] Résolution du conflit

	git log

	commit 448f30b... (HEAD -> master)
	Merge: 5a25a13 41e11f4
	Author: user.name <user.mail>
	Date : Mon Dec 20 01:21:27 2021 +0100
	
	Résolution du conflit	
